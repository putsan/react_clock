{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","timerID","setInterval","setState","console","log","clearInterval","React","Component","getRandomNumber","Math","round","random","App","isClockVisible","clockNumber","renameClock","newNumber","changeVisibility","value","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,kEAKuB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,IAAML,GAAO,IAAIC,MAAOC,qBAExB,EAAKI,SAAS,CAAEN,SAGhBO,QAAQC,IAAIR,KACX,OAbP,6CAiBIS,cAAcN,KAAKC,WAjBvB,+BAqBI,OAAQD,KAAKJ,MAAMC,SArBvB,GAA2BU,IAAMC,W,MCiFjC,SAASC,IACP,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGVC,M,4MAhFbjB,MAAQ,CACNkB,gBAAgB,EAChBC,YAAa,I,EAGfC,YAAc,WACZ,IAAMC,EAAYR,IAGlBL,QAAQC,IAAR,kDAAuD,EAAKT,MAAMmB,YAAlE,8BAAmGE,EAAnG,MACA,EAAKd,SAAS,CAAEY,YAAY,IAAD,OAAME,M,EAGnCC,iBAAmB,SAACC,GAClB,EAAKhB,SAAS,CAAEW,eAAgBK,K,uDAGxB,IAAD,SACiCnB,KAAKJ,MAArCmB,EADD,EACCA,YAAaD,EADd,EACcA,eAErB,OACE,yBAAKM,UAAU,eACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,iBAAd,sBACkBL,IAIhBD,GACE,wBAAIM,UAAU,oBAAd,gBAEG,IACD,kBAAC,EAAD,OAKN,yBACEA,UAAU,yBAKV,4BACEC,KAAK,SACLD,UAAU,qCACVE,QAAS,kBAAM,EAAKJ,kBAAiB,KAHvC,cAQA,4BACEG,KAAK,SACLD,UAAU,qCACVE,QAAS,kBAAM,EAAKJ,kBAAiB,KAHvC,cAOA,6BAEA,4BACEG,KAAK,SACLD,UAAU,kDACVE,QAAStB,KAAKgB,aAHhB,6B,GA9DIT,IAAMC,WCFxBe,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.12a09ced.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => {\n      const time = new Date().toLocaleTimeString();\n\n      this.setState({ time });\n\n      // eslint-disable-next-line\n      console.log(time);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (this.state.time);\n  }\n}\n","import React from 'react';\n\nimport { Clock } from './components/Clock/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockNumber: '',\n  }\n\n  renameClock = () => {\n    const newNumber = getRandomNumber();\n\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from \"React clock ${this.state.clockNumber}\" to \"React clock #${newNumber}\"`);\n    this.setState({ clockNumber: `#${newNumber}` });\n  }\n\n  changeVisibility = (value) => {\n    this.setState({ isClockVisible: value });\n  }\n\n  render() {\n    const { clockNumber, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App my-font\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <h1 className=\"title my-font\">\n              {`React clock ${clockNumber}`}\n            </h1>\n\n            {\n              isClockVisible && (\n                <h2 className=\"subtitle my-font\">\n                  Current time:\n                  {' '}\n                  <Clock />\n                </h2>\n              )\n            }\n\n            <div\n              className=\"\n                is-small\n                js-buttons\n              \"\n            >\n              <button\n                type=\"button\"\n                className=\"button is-small my-font is-rounded\"\n                onClick={() => this.changeVisibility(true)}\n              >\n                Show Clock\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-small my-font is-rounded\"\n                onClick={() => this.changeVisibility(false)}\n              >\n                Hide Clock\n              </button>\n              <br />\n\n              <button\n                type=\"button\"\n                className=\"button is-fullwidth is-small my-font is-rounded\"\n                onClick={this.renameClock}\n              >\n                Change clock name\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction getRandomNumber() {\n  return Math.round(Math.random() * 100);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}